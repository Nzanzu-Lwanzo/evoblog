/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as IndexImport } from './routes/index'
import { Route as BlogListImport } from './routes/blog/list'
import { Route as AuthSignupImport } from './routes/auth/signup'
import { Route as AuthLoginImport } from './routes/auth/login'
import { Route as SampleListIndexImport } from './routes/sample/list/index'
import { Route as SampleIdIndexImport } from './routes/sample/$id/index'
import { Route as BlogReadSlugIndexImport } from './routes/blog/read/$slug/index'

// Create/Update Routes

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const BlogListRoute = BlogListImport.update({
  id: '/blog/list',
  path: '/blog/list',
  getParentRoute: () => rootRoute,
} as any)

const AuthSignupRoute = AuthSignupImport.update({
  id: '/auth/signup',
  path: '/auth/signup',
  getParentRoute: () => rootRoute,
} as any)

const AuthLoginRoute = AuthLoginImport.update({
  id: '/auth/login',
  path: '/auth/login',
  getParentRoute: () => rootRoute,
} as any)

const SampleListIndexRoute = SampleListIndexImport.update({
  id: '/sample/list/',
  path: '/sample/list/',
  getParentRoute: () => rootRoute,
} as any)

const SampleIdIndexRoute = SampleIdIndexImport.update({
  id: '/sample/$id/',
  path: '/sample/$id/',
  getParentRoute: () => rootRoute,
} as any)

const BlogReadSlugIndexRoute = BlogReadSlugIndexImport.update({
  id: '/blog/read/$slug/',
  path: '/blog/read/$slug/',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/auth/login': {
      id: '/auth/login'
      path: '/auth/login'
      fullPath: '/auth/login'
      preLoaderRoute: typeof AuthLoginImport
      parentRoute: typeof rootRoute
    }
    '/auth/signup': {
      id: '/auth/signup'
      path: '/auth/signup'
      fullPath: '/auth/signup'
      preLoaderRoute: typeof AuthSignupImport
      parentRoute: typeof rootRoute
    }
    '/blog/list': {
      id: '/blog/list'
      path: '/blog/list'
      fullPath: '/blog/list'
      preLoaderRoute: typeof BlogListImport
      parentRoute: typeof rootRoute
    }
    '/sample/$id/': {
      id: '/sample/$id/'
      path: '/sample/$id'
      fullPath: '/sample/$id'
      preLoaderRoute: typeof SampleIdIndexImport
      parentRoute: typeof rootRoute
    }
    '/sample/list/': {
      id: '/sample/list/'
      path: '/sample/list'
      fullPath: '/sample/list'
      preLoaderRoute: typeof SampleListIndexImport
      parentRoute: typeof rootRoute
    }
    '/blog/read/$slug/': {
      id: '/blog/read/$slug/'
      path: '/blog/read/$slug'
      fullPath: '/blog/read/$slug'
      preLoaderRoute: typeof BlogReadSlugIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/auth/login': typeof AuthLoginRoute
  '/auth/signup': typeof AuthSignupRoute
  '/blog/list': typeof BlogListRoute
  '/sample/$id': typeof SampleIdIndexRoute
  '/sample/list': typeof SampleListIndexRoute
  '/blog/read/$slug': typeof BlogReadSlugIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/auth/login': typeof AuthLoginRoute
  '/auth/signup': typeof AuthSignupRoute
  '/blog/list': typeof BlogListRoute
  '/sample/$id': typeof SampleIdIndexRoute
  '/sample/list': typeof SampleListIndexRoute
  '/blog/read/$slug': typeof BlogReadSlugIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/auth/login': typeof AuthLoginRoute
  '/auth/signup': typeof AuthSignupRoute
  '/blog/list': typeof BlogListRoute
  '/sample/$id/': typeof SampleIdIndexRoute
  '/sample/list/': typeof SampleListIndexRoute
  '/blog/read/$slug/': typeof BlogReadSlugIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/auth/login'
    | '/auth/signup'
    | '/blog/list'
    | '/sample/$id'
    | '/sample/list'
    | '/blog/read/$slug'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/auth/login'
    | '/auth/signup'
    | '/blog/list'
    | '/sample/$id'
    | '/sample/list'
    | '/blog/read/$slug'
  id:
    | '__root__'
    | '/'
    | '/auth/login'
    | '/auth/signup'
    | '/blog/list'
    | '/sample/$id/'
    | '/sample/list/'
    | '/blog/read/$slug/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthLoginRoute: typeof AuthLoginRoute
  AuthSignupRoute: typeof AuthSignupRoute
  BlogListRoute: typeof BlogListRoute
  SampleIdIndexRoute: typeof SampleIdIndexRoute
  SampleListIndexRoute: typeof SampleListIndexRoute
  BlogReadSlugIndexRoute: typeof BlogReadSlugIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthLoginRoute: AuthLoginRoute,
  AuthSignupRoute: AuthSignupRoute,
  BlogListRoute: BlogListRoute,
  SampleIdIndexRoute: SampleIdIndexRoute,
  SampleListIndexRoute: SampleListIndexRoute,
  BlogReadSlugIndexRoute: BlogReadSlugIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/auth/login",
        "/auth/signup",
        "/blog/list",
        "/sample/$id/",
        "/sample/list/",
        "/blog/read/$slug/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/auth/login": {
      "filePath": "auth/login.tsx"
    },
    "/auth/signup": {
      "filePath": "auth/signup.tsx"
    },
    "/blog/list": {
      "filePath": "blog/list.tsx"
    },
    "/sample/$id/": {
      "filePath": "sample/$id/index.tsx"
    },
    "/sample/list/": {
      "filePath": "sample/list/index.tsx"
    },
    "/blog/read/$slug/": {
      "filePath": "blog/read/$slug/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
