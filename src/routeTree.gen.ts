/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as IndexImport } from './routes/index'
import { Route as AuthSignupImport } from './routes/auth/signup'
import { Route as AuthLoginImport } from './routes/auth/login'
import { Route as SampleslugIndexImport } from './routes/sample/[slug]/index'
import { Route as PostReadidIndexImport } from './routes/post/read/[id]/index'

// Create/Update Routes

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const AuthSignupRoute = AuthSignupImport.update({
  id: '/auth/signup',
  path: '/auth/signup',
  getParentRoute: () => rootRoute,
} as any)

const AuthLoginRoute = AuthLoginImport.update({
  id: '/auth/login',
  path: '/auth/login',
  getParentRoute: () => rootRoute,
} as any)

const SampleslugIndexRoute = SampleslugIndexImport.update({
  id: '/sample/[slug]/',
  path: '/sample/[slug]/',
  getParentRoute: () => rootRoute,
} as any)

const PostReadidIndexRoute = PostReadidIndexImport.update({
  id: '/post/read/[id]/',
  path: '/post/read/[id]/',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/auth/login': {
      id: '/auth/login'
      path: '/auth/login'
      fullPath: '/auth/login'
      preLoaderRoute: typeof AuthLoginImport
      parentRoute: typeof rootRoute
    }
    '/auth/signup': {
      id: '/auth/signup'
      path: '/auth/signup'
      fullPath: '/auth/signup'
      preLoaderRoute: typeof AuthSignupImport
      parentRoute: typeof rootRoute
    }
    '/sample/[slug]/': {
      id: '/sample/[slug]/'
      path: '/sample/[slug]'
      fullPath: '/sample/[slug]'
      preLoaderRoute: typeof SampleslugIndexImport
      parentRoute: typeof rootRoute
    }
    '/post/read/[id]/': {
      id: '/post/read/[id]/'
      path: '/post/read/[id]'
      fullPath: '/post/read/[id]'
      preLoaderRoute: typeof PostReadidIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/auth/login': typeof AuthLoginRoute
  '/auth/signup': typeof AuthSignupRoute
  '/sample/[slug]': typeof SampleslugIndexRoute
  '/post/read/[id]': typeof PostReadidIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/auth/login': typeof AuthLoginRoute
  '/auth/signup': typeof AuthSignupRoute
  '/sample/[slug]': typeof SampleslugIndexRoute
  '/post/read/[id]': typeof PostReadidIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/auth/login': typeof AuthLoginRoute
  '/auth/signup': typeof AuthSignupRoute
  '/sample/[slug]/': typeof SampleslugIndexRoute
  '/post/read/[id]/': typeof PostReadidIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/auth/login'
    | '/auth/signup'
    | '/sample/[slug]'
    | '/post/read/[id]'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/auth/login'
    | '/auth/signup'
    | '/sample/[slug]'
    | '/post/read/[id]'
  id:
    | '__root__'
    | '/'
    | '/auth/login'
    | '/auth/signup'
    | '/sample/[slug]/'
    | '/post/read/[id]/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthLoginRoute: typeof AuthLoginRoute
  AuthSignupRoute: typeof AuthSignupRoute
  SampleslugIndexRoute: typeof SampleslugIndexRoute
  PostReadidIndexRoute: typeof PostReadidIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthLoginRoute: AuthLoginRoute,
  AuthSignupRoute: AuthSignupRoute,
  SampleslugIndexRoute: SampleslugIndexRoute,
  PostReadidIndexRoute: PostReadidIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/auth/login",
        "/auth/signup",
        "/sample/[slug]/",
        "/post/read/[id]/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/auth/login": {
      "filePath": "auth/login.tsx"
    },
    "/auth/signup": {
      "filePath": "auth/signup.tsx"
    },
    "/sample/[slug]/": {
      "filePath": "sample/[slug]/index.tsx"
    },
    "/post/read/[id]/": {
      "filePath": "post/read/[id]/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
